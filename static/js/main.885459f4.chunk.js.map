{"version":3,"sources":["components/Cared.js","components/CaredsList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Cared","no","className","alt","src","id","loading","name","email","cardsList","length","map","i","SearchBox","fun","type","onChange","placeholder","Scroll","props","style","height","overflowY","children","App","useState","robo","setRobo","searchr","setSearchr","useEffect","fetch","then","res","json","data","filterrobo","filter","robot","toLowerCase","includes","event","target","value","CaredsList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAqBeA,EApBD,SAAC,GAAS,IAARC,EAAO,EAAPA,GACZ,OAIK,sBAAiBC,UAAU,0DAA3B,UAEG,qBAAKC,IAAI,QAAQC,IAAG,+BAA4BH,EAAGI,IAAOC,QAAQ,SAClE,sBAAKJ,UAAU,GAAf,UACI,6BAAKD,EAAGM,OACR,4BAAIN,EAAGO,QACP,4BAAIP,EAAGI,UANJJ,EAAGI,KCcPI,EAnBE,SAAC,GAAS,IAARR,EAAO,EAAPA,GAEf,OAAiB,IAAdA,EAAGS,OAGN,8BAEKT,EAAGU,KAAI,SAACC,GACL,OAAM,cAAC,EAAD,CAAOX,GAAIW,SAOd,sBAAKV,UAAU,SAAf,cAAyB,oBAAIA,UAAU,KAAd,6BAAzB,QCJAW,EAZG,SAAC,GAAS,IAARC,EAAO,EAAPA,IAEhB,OACI,qBAAKZ,UAAU,MAAf,SAEI,uBAAOa,KAAK,SAASC,SAAUF,EAAKG,YAAY,gBAAgBf,UAAU,gDCKvEgB,G,YATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAC,UAAY,kBAAmBC,OAAO,OAAQC,UAAU,UAArE,SACKH,EAAMI,aC6DJC,EAxDH,WAUV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAWAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAGR,EAAQQ,QACvB,IAGH,IAKKC,EAAaV,EAAKW,QAAO,SAAAC,GAC3B,OAAOA,EAAM/B,KAAKgC,cAAcC,SAASZ,EAAQW,kBAEjD,OAAkB,IAAfb,EAAKhB,OAGN,sBAAKR,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,oBACA,cAAC,EAAD,CAAWY,IAbJ,SAAC2B,GACZZ,EAAWY,EAAMC,OAAOC,UAapB,cAAC,EAAD,UAEE,cAACC,EAAD,CAAY3C,GAAImC,SAMd,qBAAKlC,UAAU,SAAf,SAAwB,8CChDrB2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,K","file":"static/js/main.885459f4.chunk.js","sourcesContent":["\r\nconst Cared = ({no}) =>{\r\n    return(\r\n        \r\n\r\n            \r\n         <div key={no.id} className=\"bg-light-green dib br4 pa2 ma2 grow ba b--gray shadow-3\">\r\n\r\n            <img alt='robot' src ={`https://robohash.org/${(no.id)}`} loading=\"lazy\"/>\r\n            <div className=\"\">\r\n                <h2>{no.name}</h2>\r\n                <p>{no.email}</p>\r\n                <p>{no.id}</p>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Cared","import Cared from './Cared'\r\nconst cardsList =({no}) =>{\r\n\r\n    if(no.length !== 0 ){\r\n    return (\r\n        \r\n    <div>\r\n\r\n        {no.map((i) =>{ \r\n            return<Cared no={i}/>\r\n            })}\r\n       \r\n\r\n    </div>\r\n    )\r\n    }else{\r\n        return <div className=\"loding\"> <h1 className=\"f1\">NO Robots Found</h1> </div>\r\n    }\r\n}\r\n\r\nexport default cardsList","const SearchBox = ({fun})=>{\r\n    \r\n    return(\r\n        <div className=\"ma2\" >\r\n\r\n            <input type=\"search\" onChange={fun} placeholder=\"Search Robots\" className=\" f4 pa3 ba b--green bg-lightest-blue br3\"/>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBox","\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{\"borderTop\":'2px solid black', height:\"70vh\", overflowY:\"scroll\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Scroll","import React, {useState, useEffect} from 'react';\r\nimport CaredsList from '../components/CaredsList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport 'tachyons'\r\n// import {no} from './NoOfRobots'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\n\r\n\r\nconst App = () =>{\r\n\r\n  // constructor(){\r\n  //   super();\r\n  //   this.state = {\r\n  //     searchr : '',\r\n  //     robo   : [],\r\n  //   }\r\n  // };\r\n\r\n  const [robo, setRobo] = useState([]);\r\n  const [searchr,setSearchr] = useState('');\r\n\r\n  // componentDidMount(){\r\n    \r\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json())\r\n  //   .then(data=>{\r\n  //       this.setState({robo : data})\r\n  //   })\r\n\r\n  // }\r\n\r\n  useEffect(()=>{\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(res => res.json())\r\n      .then(data=> setRobo(data))\r\n  },[])\r\n\r\n  // on change event function for serchbox\r\n const changee=(event)=>{\r\n    setSearchr(event.target.value);       \r\n  }\r\n  \r\n    \r\n  let filterrobo = robo.filter(robot=>{\r\n    return robot.name.toLowerCase().includes(searchr.toLowerCase())\r\n    })\r\n    if(robo.length !==0)\r\n    {\r\n    return(\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">robots</h1>\r\n        <SearchBox fun = {changee}/>\r\n        <Scroll>\r\n\r\n          <CaredsList no={filterrobo}/>\r\n\r\n        </Scroll>\r\n      </div>\r\n    )\r\n    }else{\r\n      return<div className='loding'><h1>loding...</h1></div>\r\n    }\r\n  \r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}